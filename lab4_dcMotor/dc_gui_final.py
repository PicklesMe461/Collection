# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dc.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import requests



# Sample requests
#  requests.post(self.target_address, data={"LED" : "ON"})
# Preferably use with try except
# send raw data as text so that the pico server can interpret it


class Ui_widget(object):

    def __init__(self) -> None:
        self.duty_cycle = None
        self.frequency = None
        self.sense = None
        self.info = "" 
        self.target_address = "http://192.168.68.110/"

    def setupUi(self, widget):
        widget.setObjectName("widget")
        widget.resize(666, 543)
        widget.setWindowTitle("")
        self.tableView = QtWidgets.QTableView(widget)
        self.tableView.setGeometry(QtCore.QRect(30, 30, 141, 41))
        self.tableView.setToolTip("")
        self.tableView.setStatusTip("")
        self.tableView.setWhatsThis("")
        self.tableView.setAccessibleName("")
        self.tableView.setObjectName("tableView")
        self.radioButton = QtWidgets.QRadioButton(widget)
        self.radioButton.setGeometry(QtCore.QRect(40, 40, 112, 23))
        self.radioButton.setObjectName("radioButton")
        self.radioButton.toggled.connect(self.sense_rotate)
        self.radioButton_2 = QtWidgets.QRadioButton(widget)
        self.radioButton_2.setGeometry(QtCore.QRect(100, 40, 112, 23))
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_2.toggled.connect(self.sense_rotate)
        self.tableView_2 = QtWidgets.QTableView(widget)
        self.tableView_2.setGeometry(QtCore.QRect(200, 30, 271, 41))
        self.tableView_2.setObjectName("tableView_2")
        self.radioButton_3 = QtWidgets.QRadioButton(widget)
        self.radioButton_3.setGeometry(QtCore.QRect(210, 40, 112, 23))
        self.radioButton_3.setObjectName("radioButton_3")
        self.radioButton_3.toggled.connect(self.radio_btns)
        self.radioButton_4 = QtWidgets.QRadioButton(widget)
        self.radioButton_4.setGeometry(QtCore.QRect(250, 40, 112, 23))
        self.radioButton_4.setObjectName("radioButton_4")
        self.radioButton_4.toggled.connect(self.radio_btns)
        self.radioButton_5 = QtWidgets.QRadioButton(widget)
        self.radioButton_5.setGeometry(QtCore.QRect(300, 40, 112, 23))
        self.radioButton_5.setObjectName("radioButton_5")
        self.radioButton_5.toggled.connect(self.radio_btns)
        self.radioButton_6 = QtWidgets.QRadioButton(widget)
        self.radioButton_6.setGeometry(QtCore.QRect(350, 40, 112, 23))
        self.radioButton_6.setObjectName("radioButton_6")
        self.radioButton_6.toggled.connect(self.radio_btns)
        self.radioButton_7 = QtWidgets.QRadioButton(widget)
        self.radioButton_7.setGeometry(QtCore.QRect(410, 40, 112, 23))
        self.radioButton_7.setObjectName("radioButton_7")
        self.radioButton_7.toggled.connect(self.radio_btns)
        self.pushButton = QtWidgets.QPushButton(widget)
        self.pushButton.setGeometry(QtCore.QRect(510, 30, 111, 41))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.start)
        self.tableView_3 = QtWidgets.QTableView(widget)
        self.tableView_3.setGeometry(QtCore.QRect(30, 100, 591, 101))
        self.tableView_3.setObjectName("tableView_3")
        self.tableView_4 = QtWidgets.QTableView(widget)
        self.tableView_4.setGeometry(QtCore.QRect(30, 210, 591, 101))
        self.tableView_4.setObjectName("tableView_4")
        self.pushButton_2 = QtWidgets.QPushButton(widget)
        self.pushButton_2.setGeometry(QtCore.QRect(30, 320, 591, 81))
        font = QtGui.QFont()
        font.setPointSize(22)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.stop)
        self.textBrowser = QtWidgets.QTextBrowser(widget)
        self.textBrowser.setGeometry(QtCore.QRect(30, 410, 591, 131))
        self.textBrowser.setObjectName("textBrowser")
        self.horizontalScrollBar = QtWidgets.QScrollBar(widget)
        self.horizontalScrollBar.setGeometry(QtCore.QRect(40, 140, 561, 41))
        self.horizontalScrollBar.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalScrollBar.setObjectName("horizontalScrollBar")
        self.horizontalScrollBar.valueChanged.connect(self.scrollbar_value)
        self.horizontalScrollBar_2 = QtWidgets.QScrollBar(widget)
        self.horizontalScrollBar_2.setGeometry(QtCore.QRect(40, 260, 561, 41))
        self.horizontalScrollBar_2.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalScrollBar_2.setObjectName("horizontalScrollBar_2")
        self.horizontalScrollBar_2.valueChanged.connect(self.scrollbar2_value)
        self.label = QtWidgets.QLabel(widget)
        self.label.setGeometry(QtCore.QRect(40, 20, 111, 17))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(widget)
        self.label_2.setGeometry(QtCore.QRect(210, 20, 181, 17))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(widget)
        self.label_3.setGeometry(QtCore.QRect(40, 90, 111, 17))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(widget)
        self.label_4.setGeometry(QtCore.QRect(40, 200, 111, 17))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(widget)
        self.label_5.setGeometry(QtCore.QRect(130, 430, 391, 81))
        self.label_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")

        self.retranslateUi(widget)
        QtCore.QMetaObject.connectSlotsByName(widget)

    def start(self):
        self.sense = "Start"
        self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
        
        try:
            requests.post(self.target_address, data={"MODE" : "START", "DUTY_CYCLE" : str(self.duty_cycle), "FREQUENCY" : str(self.frequency), "SENSE" : "CW"})
        except Exception as e:
            print(e)
        return "start"

    def stop(self):
        self.sense = "Stop"
        self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
        
        try:
            requests.post(self.target_address, data={"MODE" : "STOP"})
        except Exception as e:
            print(e)
        
        return "stop"

    def radio_btns(self):
        if self.radioButton_3.isChecked():
            self.duty_cycle = int(self.radioButton_3.text())
            self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
            
            try:
                requests.post(self.target_address, data={"PWM" : str(self.duty_cycle)})
            except Exception as e:
                print(e)

            return int(self.radioButton_3.text())
        if self.radioButton_4.isChecked():
            self.duty_cycle = int(self.radioButton_4.text())
            self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
            
            try:
                requests.post(self.target_address, data={"PWM" : str(self.duty_cycle)})
            except Exception as e:  
                print(e)
            
            return int(self.radioButton_4.text())
        if self.radioButton_5.isChecked():
            self.duty_cycle = int(self.radioButton_5.text())
            self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
            
            try:
                requests.post(self.target_address, data={"PWM" : str(self.duty_cycle)})
            except Exception as e:
                print(e)

            return int(self.radioButton_5.text())
        if self.radioButton_6.isChecked():
            self.duty_cycle = int(self.radioButton_6.text())          
            self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
            
            try:
                requests.post(self.target_address, data={"PWM" : str(self.duty_cycle)})
            except Exception as e:
                print(e)
            
            return int(self.radioButton_6.text())
        if self.radioButton_7.isChecked():
            self.duty_cycle = int(self.radioButton_7.text())
            self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
            
            try:
                requests.post(self.target_address, data={"PWM" : str(self.duty_cycle)})
            except Exception as e:
                print(e)
            
            return int(self.radioButton_7.text())
        

    def sense_rotate(self):
        if self.radioButton.isChecked():
            self.sense = "CW"
            self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
            
            try:
                requests.post(self.target_address, data={"SENSE" : "CW"})
            except Exception as e:
                print(e)
            
            return "CW"
        if self.radioButton_2.isChecked():
            self.sense = "CCW"
            self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
            
            try:
                requests.post(self.target_address, data={"SENSE" : "CCW"})
            except Exception as e:
                print(e)

            
            return "CCW"

    def scrollbar_value(self):
        self.duty_cycle = self.horizontalScrollBar.value()
        self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
        
        try:
            requests.post(self.target_address, data={"PWM" : str(self.duty_cycle)})
        except Exception as e:
                print(e)
        
        return self.horizontalScrollBar.value()

    def scrollbar2_value(self):
        self.frequency = self.horizontalScrollBar_2.value()
        self.label_5.setText("Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense))
        
        try:    
            requests.post(self.target_address, data={"FREQUENCY" : str(self.frequency)})
        except Exception as e:
            print(e)

        
        return self.horizontalScrollBar_2.value()

    def display(self):
        return "Duty Cycle: {}, Frequency: {}, Sense: {}".format(self.duty_cycle, self.frequency, self.sense) 
    
    def retranslateUi(self, widget):
        _translate = QtCore.QCoreApplication.translate
        self.radioButton.setText(_translate("widget", "CW"))
        self.radioButton_2.setText(_translate("widget", "CCW"))
        self.radioButton_3.setText(_translate("widget", "0"))
        self.radioButton_4.setText(_translate("widget", "25"))
        self.radioButton_5.setText(_translate("widget", "50"))
        self.radioButton_6.setText(_translate("widget", "75"))
        self.radioButton_7.setText(_translate("widget", "100"))
        self.pushButton.setText(_translate("widget", "START"))
        self.pushButton_2.setText(_translate("widget", "STOP"))
        self.label.setText(_translate("widget", "Motor Direction"))
        self.label_2.setText(_translate("widget", "Preset Duty Cycle Values"))
        self.label_3.setText(_translate("widget", "Duty Cycle"))
        self.label_4.setText(_translate("widget", "PWM Frequency"))
        self.label_5.setText(_translate("widget", "Stay Tuned"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    widget = QtWidgets.QWidget()
    ui = Ui_widget()
    ui.setupUi(widget)
    widget.show()
    sys.exit(app.exec_())
